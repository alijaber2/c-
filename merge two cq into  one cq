#include<iostream.h>
const size1=10;
const size2=20;
int cq1[size1];
int cq2[size1];
int cq3[size2];
int front1,rear1,item,number1,number2,number3,n,front2,rear2,front3,rear3;
 void numberitem()
 {
 if(front1<rear1)
  number1=rear1-front1;
 else if(front1>rear1)
 {
  n=size1-(front1+1);
 number1=n+rear1+1;
 }
 if(front1==0 && rear1==0)number1=0;
 if(front2<rear2)
  number2=rear2-front2;
 else if(front2>rear2)
 {
  n=size1-(front2+1);
 number2=n+rear1+1;
 }
  if(front2==0 && rear2==0)number2=0;
 }
void addcq(int h,int item)
{
if(h==1){
if(rear1==size1-1 )rear1=0;

else {++rear1;
if(rear1==front1)
{cout<<"queue1 is full"<<endl;--rear1;}
else
	 cq1[rear1]=item;
}
}
if(h==2){
if(rear2==size1-1 )rear2=0;

else {++rear2;
if(rear2==front2)
{cout<<"queue2 is full"<<endl;--rear2;}
else
	 cq2[rear2]=item;
}
}
if(h==3){
if(rear3==size2-1 )rear3=0;

else {++rear3;
if(rear3==front3)
{cout<<"queue3 is full"<<endl;--rear3;}
else
	 cq3[rear3]=item;
}
}
  }
  void merge()
  {
  int i;
  numberitem() ;
  if(number1==0 || number2==0)
  cout<<"can not merge cq is empty"<<endl;
  else{
  if(front1<rear1)
  for (i=front1+1;i<=rear1;++i)
	  {item=cq1[i];
	  addcq(3,item);
	  cq1[i]=0;
	  }
	  else if(front1>rear1)
	  {
	  for(i=front1+1;i<size1;++i)
	  {item=cq1[i];
	  addcq(3,item);
	  cq1[i]=0;
	  if(front1==size1-1)front1=0;}
	  for(i=0;i<=rear1;++i)
	  {item=cq1[i];
	  cq1[i]=0;
	  addcq(3,item);}
	  }
	  if(front2<rear2)
  for (i=front2+1;i<=rear2;++i)
	  {item=cq2[i];
	  cq2[i]=0;
	  addcq(3,item);}
	  else if(front2>rear2)
	  {
	  for(i=front2+1;i<size1;++i)
	  {item=cq2[i];
	  addcq(3,item);
	  cq2[i]=0;
	  if(front2==size1-1)front2==0;}
	  for(i=0;i<=rear2;++i)
	  {item=cq2[i];
	  cq2[i]=0;
	  addcq(3,item);}
	  }

	front1=rear1=front2=rear2=0;
  }
  }
  void deletecq(int h)
  {
  if(h==1)
  {if(front1==rear1)
{
 cout<<"cq1 is empty"<<endl;

 front1=rear1=0;
 }
 else
 {
 if(front1==size1-1)
 front1=0;
 else
  ++front1;
 item=cq1[front1];
 cq1[front1]=0;

 }
 }
 if(h==2)
 {
 if(front2==rear2)
{
 cout<<"cq2 is empty"<<endl;

 front2=rear2=0;
 }
 else
 {
 if(front2==size1-1)
 front2=0;
 else
  ++front2;
 item=cq2[front2];
 cq2[front2]=0;

 }
 }

  }


  void display()
 {  int i;
 cout<<"item in cq1"<<endl;
 for( i=0;i<=size1-1;++i)
 cout<<cq1[i]<<"   ";
 cout<<endl<<"fron1 = "<<front1<<endl<<"rear1 = "<<rear1<<endl;
 cout<<"item in cq2"<<endl;
 for( i=0;i<=size1-1;++i)
 cout<<cq2[i]<<"   ";
 cout<<endl<<"fron2 = "<<front2<<endl<<"rear2 = "<<rear2<<endl;
 cout<<"item in cq3"<<endl;
 for( i=0;i<=size2-1;++i)
 cout<<cq3[i]<<"   ";
 cout<<endl<<"fron3 = "<<front3<<endl<<"rear3 = "<<rear3<<endl;
 }

 void clear()
 {
  front1 =rear1=0;
  front2=rear2=0;
  front3=rear3=0;
  }
  main()
  {
  int choice,n,item,i;
  clear() ;
  do

  {

  cout<<endl;
  cout<<"press 1 to add cq1"<<endl;
  cout<<"press 2 to add cq2"<<endl;
	cout<<"press 3 to merge cq1 and cq2 into cq3"<<endl;
  cout<<"press 4 to to disblay "<<endl;
  cout<<"press 5 to print number item in cq "<<endl;
  cout<<"press 6 to delete itme  "<<endl;
	cout<<"press 7 to Exit  "<<endl;

  cin>>choice;
  switch(choice)
  {
  case 1:
  {
	 cout<<"How many items are added into cq1"<<endl;
	 cin>>n;
	 cout<<"Enter the elements"<<endl;
	 for(i=1;i<=n;++i)
	 {
	 cin>>item;
	 addcq(1,item) ;}
	 break;

  }
	case 2:
  {
	 cout<<"How many items are added into cq2"<<endl;
	 cin>>n;
	 cout<<"Enter the elements"<<endl;
	 for(i=1;i<=n;++i)
	 {
	 cin>>item;
	 addcq(2,item) ;}
	 break;

  }
  case 3:
	{

	  merge();break;
	}
	case 4 :{

	  display();

	  break;


	}

	case 5:
	{
	numberitem();
	 cout<<"number item in cq1 = "<<number1<<endl;
 cout<<"number item in cq2 = "<<number2<<endl;
 break;
 }

	case 6:{
	cout<<"press 1 to delete from cq1"<<endl;
	 cout<<"press 2 to delete from cq2"<<endl;

	 cin>>choice;
	 cout<<"How many items are deleted"<<endl;
	 switch(choice)
	 {
	 case 1:{cin>>n;
	 for(i=1;i<=n;++i)
	 deletecq(1);break;}
	 case 2:{cin>>n;
	 for(i=1;i<=n;++i)
	 deletecq(2);break;}
	 }

	}
	}
	 }while(choice !=7)  ;


}
